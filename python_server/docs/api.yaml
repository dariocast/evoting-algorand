openapi: 3.0.1
info:
  title: Voteapp Python Server
  contact:
    email: dariocastellano18@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
- url: http://localhost:8090/
tags:
- name: voting
  description: Everything about voting management
- name: voting state
  description: Get local or global state directly from algorand
- name: algorand
  description: SDK operation toward algorand blockchain
paths:
  /voting:
    get:
      tags:
      - voting
      summary: Retrieve all Voting
      description: Retrieve all voting
      operationId: getVotings
      responses:
        200:
          description: successful operation
          content:
            array:
              schema:
                $ref: '#/components/schemas/Voting'
        400:
          description: Unknown error
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/Voting'
    post:
      tags:
      - voting
      summary: Add a new voting to the db
      operationId: addVoting
      requestBody:
        description: Voting object that needs to be added to the db
        content:
          application/json:
            schema:
                $ref: '#/components/schemas/CreationRequestBody'
        required: true
      responses:
        200:
          description: App created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Voting'
        400:
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /voting/{votingId}:
    get:
      tags:
      - voting
      summary: Find voting by ID
      description: Returns a single voting
      operationId: getVotingById
      parameters:
      - name: votingId
        in: path
        description: ID of voting to return
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Voting'
        400:
          description: Invalid ID supplied
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        404:
          description: voting not found
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
    delete:
      tags:
      - voting
      summary: Deletes a voting
      operationId: deleteVoting
      parameters:
      - name: votingId
        in: path
        description: Voting id to delete
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: App successfully deleted and removed from account
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        400:
          description: Invalid ID supplied
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        404:
          description: voting not found
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /algorand/vote/{votingId}:
    post:
      tags:
      - algorand
      summary: Call application on algorand for voting
      description: Call application on algorand for voting
      operationId: vote
      parameters:
      - name: votingId
        in: path
        description: ID of voting to call
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: vote successfully casted on algorand blockchain
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        400:
          description: vote not casted on algorand blockchain due to some error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /voting/state/{votingId}/{address}:
    get:
      tags:
      - voting state
      summary: Get local state of voting by ID
      description: Returns a single voting state
      operationId: votingLocalState
      parameters:
      - name: votingId
        in: path
        description: ID of voting to return
        required: true
        schema:
          type: integer
          format: int64
      - name: address
        in: path
        description: address to check
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Voting'
        400:
          description: Something bad happened
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /voting/state/{votingId}:
    get:
      tags:
      - voting state
      summary: Get global state of voting by ID
      description: Returns a single voting state
      operationId: votingGlobalState
      parameters:
      - name: votingId
        in: path
        description: ID of voting to return
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Voting'
        400:
          description: Something bad happened
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /algorand/register/{votingId}:
    post:
      tags:
      - algorand
      summary: Opt account into application on algorand for voting
      description: Opt account into application on algorand for voting
      operationId: opt-in
      parameters:
      - name: votingId
        in: path
        description: ID of voting to opt-in
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: account successfully opted into app on algorand
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        400:
          description: vote not casted on algorand blockchain due to some error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          
components:
  schemas:
    Voting:
      type: object
      properties:
        algorandAppId:
          type: string
        assetId:
          type: string
        description:
          type: string
        title:
          type: string
        options:
          type: array
          items:
            type: string
        creator:
          type: string
        regBegin:
          type: string
        regEnd:
          type: string
        voteBegin:
          type: string
        voteEnd:
          type: string
        subscribers:
          type: integer
    CreationRequestBody:
      type: object
      properties:
        assetId:
          type: string
        description:
          type: string
        title:
          type: string
        options:
          type: array
          items:
            type: string
        regBegin:
          type: string
        regEnd:
          type: string
        voteBegin:
          type: string
        voteEnd:
          type: string
        passphrase:
          type: string
    ApiResponse:
      type: object
      properties:
        status_code:
          type: integer
          format: int32
        data:
          type: object
          properties: {}
        message:
          type: string
        exception:
          type: string
        errors:
          type: string
